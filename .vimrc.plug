" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/bundle/')

" General {
    Plug 'scrooloose/nerdtree'
    Plug 'altercation/vim-colors-solarized'
    Plug 'spf13/vim-colors'
    Plug 'tpope/vim-surround'
    Plug 'tpope/vim-repeat'
    Plug 'rhysd/conflict-marker.vim'
    Plug 'jiangmiao/auto-pairs'
    Plug 'ctrlpvim/ctrlp.vim'
    Plug 'tacahiroy/ctrlp-funky'
    Plug 'terryma/vim-multiple-cursors'
    Plug 'vim-scripts/sessionman.vim'
    Plug 'matchit.zip'
    "Plug 'jaxbot/github-issues.vim'

    Plug 'junegunn/vim-easy-align'
    "Plug 'nsf/gocode', { 'tag': 'v.20150303', 'rtp': 'vim' }
    Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

    " --- man pages, tmux
    " ---------------------------------------------
    "Plug 'jez/vim-superman'
    "Plug 'christoomey/vim-tmux-navigator'
    "Plug 'powerline/fonts'
    Plug 'bling/vim-bufferline'
    Plug 'easymotion/vim-easymotion'
    Plug 'jistr/vim-nerdtree-tabs'
    Plug 'flazz/vim-colorschemes'
    Plug 'mbbill/undotree'
    Plug 'vim-scripts/restore_view.vim'
    Plug 'mhinz/vim-signify'
    Plug 'tpope/vim-abolish'
    Plug 'kana/vim-textobj-user'
    Plug 'kana/vim-textobj-indent'
    Plug 'gcmt/wildfire.vim'
" }

" Writing {
    Plug 'reedes/vim-litecorrect'
    Plug 'reedes/vim-textobj-sentence'
    Plug 'reedes/vim-textobj-quote'
    Plug 'reedes/vim-wordy'
" }

" General Programming {
    " Pick one of the checksyntax, jslint, or syntastic
    Plug 'scrooloose/syntastic'
    Plug 'tpope/vim-fugitive'
    Plug 'mattn/webapi-vim'
    Plug 'mattn/gist-vim'
    Plug 'scrooloose/nerdcommenter'
    Plug 'tpope/vim-commentary'
    Plug 'godlygeek/tabular'
    Plug 'luochen1990/rainbow'
    Plug 'Yggdroot/indentLine'
    Plug 'ryanoasis/nerd-fonts'
    Plug 'airblade/vim-gitgutter'
    Plug 'osyo-manga/vim-over'

    Plug 'majutsushi/tagbar'
" }

j
" Snippets & AutoComplete {
    "Plug 'garbas/vim-snipmate'
    "Plug 'honza/vim-snippets'
    " Source support_function.vim to support vim-snippets.
    "if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
        "source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
    "endif
    " youcompleteme'{
        "Plug 'Valloric/YouCompleteMe'
        "Plug 'SirVer/ultisnips' Plug 'honza/vim-snippets'
    " }sadsa
    " neocomplcache {
        "Plug 'Shougo/neocomplcache'
        "Plug 'Shougo/neosnippet'
        "Plug 'Shougo/neosnippet-snippets'
        "Plug 'honza/vim-snippets'
    " }
    " neocomplete {
        Plug 'Shougo/neocomplete.vim'
        Plug 'Shougo/neosnippet'
        Plug 'Shougo/neosnippet-snippets'
        Plug 'honza/vim-snippets'
    " }
" }

" PHP {
    Plug 'spf13/PIV'
    Plug 'beyondwords/vim-twig'
    Plug 'tyru/open-browser.vim'
    Plug 'dsawardekar/wordpress.vim'
    "Plug 'stephpy/vim-php-cs-fixer'
    Plug 'phpactor/phpactor'
    Plug 'shawncplus/phpcomplete.vim'
    Plug 'arnaud-lb/vim-php-namespace'
    Plug 'tpope/vim-dispatch'
    Plug 'tpope/vim-projectionist'
    Plug 'noahfrederick/vim-laravel'
    Plug 'noahfrederick/vim-composer'
    Plug 'rafaelndev/deoplete-laravel-plugin'
" }

" Python {
    " Pick either python-mode or pyflakes & pydoc
    Plug 'python-mode/python-mode'
    Plug 'yssource/python.vim'
    Plug 'python_match.vim'
    Plug 'pythoncomplete'
    Plug 'davidhalter/jedi-vim'
    Plug 'Glench/Vim-Jinja2-Syntax'
    Plug 'vim-scripts/Python-Documentation'
    Plug 'tell-k/vim-autopep8'
    Plug 'ryanoasis/vim-devicons'
    Plug 'Xuyuanp/nerdtree-git-plugin'
    "Plug 'andviro/flake8-vim'
" }

"TypeScript{
    Plug 'leafgarland/typescript-vim'
"}

" Javascript {
    Plug 'elzr/vim-json'
    Plug 'groenewege/vim-less'
    Plug 'pangloss/vim-javascript'
    Plug 'briancollins/vim-jst'
    Plug 'kchmck/vim-coffee-script'
" }

" Scala {
    "Plug 'derekwyatt/vim-scala'
    "Plug 'derekwyatt/vim-sbt'
    "Plug 'xptemplate'
" }

" Haskell {
    "Plug 'travitch/hasksyn'
    "Plug 'dag/vim2hs'
    "Plug 'Twinside/vim-haskellConceal'
    "Plug 'Twinside/vim-haskellFold'
    "Plug 'lukerandall/haskellmode-vim'
    "Plug 'eagletmt/neco-ghc'
    "Plug 'eagletmt/ghcmod-vim'
    "Plug 'Shougo/vimproc.vim'
    "Plug 'adinapoli/cumino'
    "Plug 'bitc/vim-hdevtools'
" }

" HTML {
    Plug 'hail2u/vim-css3-syntax'
    Plug 'vim-scripts/HTML-AutoCloseTag'
    Plug 'gorodinskiy/vim-coloresque'
    Plug 'tpope/vim-haml'
    Plug 'mattn/emmet-vim'
    Plug "lepture/vim-jinja"
" }

" Ruby {
    Plug 'tpope/vim-rails'
    let g:rubycomplete_buffer_loading = 1
    let g:rubycomplete_classes_in_global = 1
    let g:rubycomplete_rails = 1
" }

" Puppet {
    "Plug 'rodjek/vim-puppet'
" }

" Go Lang {
    "Plug 'Blackrush/vim-gocode'
    "Plug 'fatih/vim-go'
" }

" Elixir {
    "Plug 'elixir-lang/vim-elixir'
    "Plug 'mattreduce/vim-mix'
" }

" Misc {
    Plug 'rust-lang/rust.vim'
    Plug 'tpope/vim-markdown'
    Plug 'spf13/vim-preview'
    Plug 'cespare/vim-toml'
    Plug 'quentindecock/vim-cucumber-align-pipes'
    Plug 'saltstack/salt-vim'
" }

call plug#end()
